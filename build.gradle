import java.util.regex.Matcher

buildscript {

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath "se.bjurr.gitchangelog:git-changelog-gradle-plugin:+"
        classpath files('libs/gradle-release-2.1.2.jar')
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

apply plugin: 'net.researchgate.release'

group = 'com.example'
sourceCompatibility = '11'


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '${version}'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    versionPatterns = [
            /(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
    ]
    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
    }
}

test {
    useJUnitPlatform()
}


task generateChangelogMd(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {

    file = new File("instructions/releases/CHANGELOG_${changelogVersion}".replaceAll("\\.","_").concat(".md"));
    fromRepo = file(".");
    fromRef = "refs/tags/${changelogOldVersion}";
    toRef = "refs/heads/master";
    templateContent = """
# Release-Notes Version [${changelogVersion}]
    
    {{#issues}}
     
     {{#hasLink}}
## {{name}} [{{issue}}]({{link}}) {{title}}
     {{/hasLink}}
     {{^hasLink}}
## {{name}} [[{{issue}}]](https://jira.int.cipal.be/browse/{{issue}})
     {{/hasLink}}
     
     {{#commits}}     
       @{{authorName}} - {{{message}}}
     {{/commits}}
     
    {{/issues}}
    """;
    doLast {
        exec {
            workingDir "instructions/shell"
            commandLine "sh", "linuxcommit.sh", "${changelogVersion}".replaceAll("\\.","_")
        }
    }
}
